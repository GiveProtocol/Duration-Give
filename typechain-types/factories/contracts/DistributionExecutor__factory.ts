/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DistributionExecutor,
  DistributionExecutorInterface,
} from "../../contracts/DistributionExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "distributionAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "distribution",
    outputs: [
      {
        internalType: "contract CharityScheduledDistribution",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endId",
        type: "uint256",
      },
    ],
    name: "executeDistributionBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103aa3803806103aa83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610317806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635ee58efc1461003b578063847e594a1461006a575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007d61007836600461020d565b61007f565b005b818110156100c45760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b60448201526064015b60405180910390fd5b60646100d08383610245565b1061010f5760405162461bcd60e51b815260206004820152600f60248201526e52616e676520746f6f206c6172676560881b60448201526064016100bb565b600061011b8383610245565b61012690600161025e565b67ffffffffffffffff81111561013e5761013e610271565b604051908082528060200260200182016040528015610167578160200160208202803683370190505b50905060005b81518110156101a557610180818561025e565b82828151811061019257610192610287565b602090810291909101015260010161016d565b5060005460405163353d6b2760e21b81526001600160a01b039091169063d4f5ac9c906101d690849060040161029d565b600060405180830381600087803b1580156101f057600080fd5b505af1158015610204573d6000803e3d6000fd5b50505050505050565b6000806040838503121561022057600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b818103818111156102585761025861022f565b92915050565b808201808211156102585761025861022f565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156102d5578351835292840192918401916001016102b9565b5090969550505050505056fea264697066735822122018a0566cc2e15a68f4de6c8a6ab75c9fc9254a875eebb395272e95017e9e4fc364736f6c63430008180033";

type DistributionExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DistributionExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DistributionExecutor__factory extends ContractFactory {
  constructor(...args: DistributionExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    distributionAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(distributionAddress, overrides || {});
  }
  override deploy(
    distributionAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(distributionAddress, overrides || {}) as Promise<
      DistributionExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DistributionExecutor__factory {
    return super.connect(runner) as DistributionExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributionExecutorInterface {
    return new Interface(_abi) as DistributionExecutorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DistributionExecutor {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DistributionExecutor;
  }
}
